plugins {
    id("org.jetbrains.kotlin.jvm") version "1.6.10"
    id("org.jetbrains.kotlin.kapt") version "1.6.10"
    id("org.jetbrains.kotlin.plugin.allopen") version "1.6.10"
    id("com.github.johnrengelman.shadow") version "7.1.1"
    id("io.micronaut.application") version "3.2.1"
    id("org.jetbrains.kotlin.plugin.noarg") version "1.6.10"
}

version = "0.1"
group = "pl.uz.mt.library"

repositories {
    mavenCentral()
}

noArg {
    annotation("javax.persistence.Entity")
}

dependencies {
    // ANNOTATION PROCESSING
    kapt("io.micronaut:micronaut-http-validation")
    kapt("io.micronaut.data:micronaut-data-processor")

    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut.kotlin:micronaut-kotlin-runtime")
    implementation("jakarta.annotation:jakarta.annotation-api")
    implementation("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
    runtimeOnly("ch.qos.logback:logback-classic")
    implementation("io.micronaut:micronaut-validation")

    // DATABASE
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
    implementation("io.micronaut.sql:micronaut-hibernate-jpa")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    runtimeOnly("com.h2database:h2")
    runtimeOnly group: 'org.postgresql', name: 'postgresql', version: '42.2.13'

    // JSON
    runtimeOnly("com.fasterxml.jackson.module:jackson-module-kotlin")

    // OPENAPI
    kapt("io.micronaut.openapi:micronaut-openapi:4.0.0")
    implementation("io.swagger.core.v3:swagger-annotations")


    // TESTS
    testImplementation group: 'org.mockito.kotlin', name: 'mockito-kotlin', version: '4.0.0'
    testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '4.0.0'
}

application {
    mainClass.set("pl.uz.mt.library.LibraryApplicationKt")
}
java {
    sourceCompatibility = JavaVersion.toVersion("11")
}

tasks {
    compileKotlin {
        kotlinOptions {
            jvmTarget = "11"
        }
    }
    compileTestKotlin {
        kotlinOptions {
            jvmTarget = "11"
        }
    }
}
graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("pl.uz.mt.library.*")
    }
}

kapt {
    arguments {
        arg("micronaut.openapi.views.spec", "swagger-ui.enabled=true,swagger-ui.theme=MATERIAL")
    }
}
